syntax = "proto3";

package keyauth.application;
option go_package = "github.com/infraboard/keyauth/pkg/application";

import "github.com/infraboard/mcube/cmd/protoc-gen-go-ext/extension/tag/tag.proto";
import "github.com/infraboard/mcube/pb/page/page.proto";

enum ClientType {
    CONFIDENTIAL = 0;
    PUBLIC = 1;
}

// CreateApplicatonRequest 创建应用请求
message CreateApplicatonRequest {
    // 是否是内建应用
    bool build_in =9[
        (google.protobuf.field_tag) = {struct_tag: 'json:"build_in"'}
        ];
    // 所处于域
    string domain =10[
        (google.protobuf.field_tag) = {struct_tag: 'json:"domain" validate:"required"'}
        ];
    // 应用属于那个用户
    string create_by = 11[
        (google.protobuf.field_tag) = {struct_tag: 'json:"create_by"'}
        ];
    // 应用名称
    string name = 1[
        (google.protobuf.field_tag) = {struct_tag: 'json:"name" validate:"required"'}
        ];
     // 应用的网站地址
    string website = 2[
        (google.protobuf.field_tag) = {struct_tag: 'json:"website"'}
        ];
    // 应用的LOGO
    string logo_image = 3[
        (google.protobuf.field_tag) = {struct_tag: 'json:"logo_image"'}
        ];
    // 应用简单的描述
    string description = 4[
        (google.protobuf.field_tag) = {struct_tag: 'json:"description"'}
        ];
    // 应用重定向URI, Oauht2时需要该参数
    string redirect_uri = 5[
        (google.protobuf.field_tag) = {struct_tag: 'json:"redirect_uri"'}
        ];
    // 应用申请的token的过期时间
    int64 access_token_expire_second = 6[
        (google.protobuf.field_tag) = {struct_tag: 'json:"access_token_expire_second"'}
        ];
    // 刷新token过期时间
    int64 refresh_token_expire_second = 7[
        (google.protobuf.field_tag) = {struct_tag: 'json:"refresh_token_expire_second"'}
        ];
    // 客户端类型
    ClientType client_type = 8[
        (google.protobuf.field_tag) = {struct_tag: 'json:"client_type"'}
        ];
}

// DescribeApplicationRequest 查询应用详情
message DescribeApplicationRequest {
    string id = 1;
    string client_id = 2;
}

// DeleteApplicationRequest 查询应用详情
message DeleteApplicationRequest {
    string id = 1;
}

// QueryApplicationRequest 查询应用列表
message QueryApplicationRequest {
    page.PageRequest page = 1 ;
    string account = 3;
}

// GetBuildInApplicationRequest 获取内建应用
message GetBuildInApplicationRequest {
    string name = 1;
}
