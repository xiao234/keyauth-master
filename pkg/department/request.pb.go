//go:generate  mcube enum -m -p
//
// Code generated by protoc-gen-go-ext. DO NOT EDIT.
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.1
// source: pkg/department/pb/request.proto

package department

import (
	types "github.com/infraboard/keyauth/common/types"
	_ "github.com/infraboard/mcube/cmd/protoc-gen-go-ext/extension/tag"
	page "github.com/infraboard/mcube/pb/page"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateDepartmentRequest 创建部门请求
type CreateDepartmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 部门名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" validate:"required,lte=60"`
	// 显示名称
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name"`
	// 上级部门ID
	ParentId string `protobuf:"bytes,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id" validate:"lte=200"`
	// 部门管理者account
	Manager string `protobuf:"bytes,4,opt,name=manager,proto3" json:"manager" validate:"required,lte=200"`
	// 部门成员默认角色
	DefaultRoleId string `protobuf:"bytes,5,opt,name=default_role_id,json=defaultRoleId,proto3" json:"default_role_id" validate:"lte=200"`
	// 部门所属域
	Domain string `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain"`
	// 创建人
	CreateBy string `protobuf:"bytes,7,opt,name=create_by,json=createBy,proto3" json:"create_by"`
}

func (x *CreateDepartmentRequest) Reset() {
	*x = CreateDepartmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_department_pb_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentRequest) ProtoMessage() {}

func (x *CreateDepartmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_department_pb_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentRequest.ProtoReflect.Descriptor instead.
func (*CreateDepartmentRequest) Descriptor() ([]byte, []int) {
	return file_pkg_department_pb_request_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDepartmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDepartmentRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreateDepartmentRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *CreateDepartmentRequest) GetManager() string {
	if x != nil {
		return x.Manager
	}
	return ""
}

func (x *CreateDepartmentRequest) GetDefaultRoleId() string {
	if x != nil {
		return x.DefaultRoleId
	}
	return ""
}

func (x *CreateDepartmentRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreateDepartmentRequest) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

// QueryDepartmentRequest todo
type QueryDepartmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          *page.PageRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page"`
	ParentId      string            `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	Keywords      string            `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	SkipItems     bool              `protobuf:"varint,4,opt,name=skip_items,json=skipItems,proto3" json:"skip_items"`
	WithSubCount  bool              `protobuf:"varint,5,opt,name=with_sub_count,json=withSubCount,proto3" json:"with_sub_count"`
	WithUserCount bool              `protobuf:"varint,6,opt,name=with_user_count,json=withUserCount,proto3" json:"with_user_count"`
	WithRole      bool              `protobuf:"varint,7,opt,name=with_role,json=withRole,proto3" json:"with_role"`
	Domain        string            `protobuf:"bytes,8,opt,name=domain,proto3" json:"domain" validate:"required"`
}

func (x *QueryDepartmentRequest) Reset() {
	*x = QueryDepartmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_department_pb_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDepartmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDepartmentRequest) ProtoMessage() {}

func (x *QueryDepartmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_department_pb_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDepartmentRequest.ProtoReflect.Descriptor instead.
func (*QueryDepartmentRequest) Descriptor() ([]byte, []int) {
	return file_pkg_department_pb_request_proto_rawDescGZIP(), []int{1}
}

func (x *QueryDepartmentRequest) GetPage() *page.PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *QueryDepartmentRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *QueryDepartmentRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *QueryDepartmentRequest) GetSkipItems() bool {
	if x != nil {
		return x.SkipItems
	}
	return false
}

func (x *QueryDepartmentRequest) GetWithSubCount() bool {
	if x != nil {
		return x.WithSubCount
	}
	return false
}

func (x *QueryDepartmentRequest) GetWithUserCount() bool {
	if x != nil {
		return x.WithUserCount
	}
	return false
}

func (x *QueryDepartmentRequest) GetWithRole() bool {
	if x != nil {
		return x.WithRole
	}
	return false
}

func (x *QueryDepartmentRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// DescribeDeparmentRequest 详情查询
type DescribeDeparmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	WithSubCount  bool   `protobuf:"varint,3,opt,name=with_sub_count,json=withSubCount,proto3" json:"with_sub_count"`
	WithUserCount bool   `protobuf:"varint,4,opt,name=with_user_count,json=withUserCount,proto3" json:"with_user_count"`
	WithRole      bool   `protobuf:"varint,5,opt,name=with_role,json=withRole,proto3" json:"with_role"`
	Domain        string `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain" validate:"required"`
}

func (x *DescribeDeparmentRequest) Reset() {
	*x = DescribeDeparmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_department_pb_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDeparmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDeparmentRequest) ProtoMessage() {}

func (x *DescribeDeparmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_department_pb_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDeparmentRequest.ProtoReflect.Descriptor instead.
func (*DescribeDeparmentRequest) Descriptor() ([]byte, []int) {
	return file_pkg_department_pb_request_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeDeparmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DescribeDeparmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DescribeDeparmentRequest) GetWithSubCount() bool {
	if x != nil {
		return x.WithSubCount
	}
	return false
}

func (x *DescribeDeparmentRequest) GetWithUserCount() bool {
	if x != nil {
		return x.WithUserCount
	}
	return false
}

func (x *DescribeDeparmentRequest) GetWithRole() bool {
	if x != nil {
		return x.WithRole
	}
	return false
}

func (x *DescribeDeparmentRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// UpdateDepartmentRequest todo
type UpdateDepartmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 更新模式
	UpdateMode types.UpdateMode         `protobuf:"varint,1,opt,name=update_mode,json=updateMode,proto3,enum=keyauth.common.types.UpdateMode" json:"update_mode"`
	Id         string                   `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
	Data       *CreateDepartmentRequest `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *UpdateDepartmentRequest) Reset() {
	*x = UpdateDepartmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_department_pb_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepartmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepartmentRequest) ProtoMessage() {}

func (x *UpdateDepartmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_department_pb_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepartmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateDepartmentRequest) Descriptor() ([]byte, []int) {
	return file_pkg_department_pb_request_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDepartmentRequest) GetUpdateMode() types.UpdateMode {
	if x != nil {
		return x.UpdateMode
	}
	return types.UpdateMode_PUT
}

func (x *UpdateDepartmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDepartmentRequest) GetData() *CreateDepartmentRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

// DeleteDepartmentRequest todo
type DeleteDepartmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteDepartmentRequest) Reset() {
	*x = DeleteDepartmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_department_pb_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDepartmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDepartmentRequest) ProtoMessage() {}

func (x *DeleteDepartmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_department_pb_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDepartmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteDepartmentRequest) Descriptor() ([]byte, []int) {
	return file_pkg_department_pb_request_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDepartmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// JoinDepartmentRequest todo
type JoinDepartmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 申请人
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account" validate:"required"`
	// 申请加入的部门
	DepartmentId string `protobuf:"bytes,2,opt,name=department_id,json=departmentId,proto3" json:"department_id" validate:"required"`
	// 留言
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message"`
	// 所属域
	Domain string `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain"`
}

func (x *JoinDepartmentRequest) Reset() {
	*x = JoinDepartmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_department_pb_request_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinDepartmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinDepartmentRequest) ProtoMessage() {}

func (x *JoinDepartmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_department_pb_request_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinDepartmentRequest.ProtoReflect.Descriptor instead.
func (*JoinDepartmentRequest) Descriptor() ([]byte, []int) {
	return file_pkg_department_pb_request_proto_rawDescGZIP(), []int{5}
}

func (x *JoinDepartmentRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *JoinDepartmentRequest) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *JoinDepartmentRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JoinDepartmentRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// QueryApplicationFormRequet todo
type QueryApplicationFormRequet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *page.PageRequest     `protobuf:"bytes,1,opt,name=page,proto3" json:"page"`
	Account      string                `protobuf:"bytes,2,opt,name=account,proto3" json:"account"`
	DepartmentId string                `protobuf:"bytes,3,opt,name=department_id,json=departmentId,proto3" json:"department_id"`
	Status       ApplicationFormStatus `protobuf:"varint,4,opt,name=status,proto3,enum=keyauth.department.ApplicationFormStatus" json:"status"`
	SkipItems    bool                  `protobuf:"varint,5,opt,name=skip_items,json=skipItems,proto3" json:"skip_items"`
	Domain       string                `protobuf:"bytes,6,opt,name=domain,proto3" json:"domain" validate:"required"`
}

func (x *QueryApplicationFormRequet) Reset() {
	*x = QueryApplicationFormRequet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_department_pb_request_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryApplicationFormRequet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryApplicationFormRequet) ProtoMessage() {}

func (x *QueryApplicationFormRequet) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_department_pb_request_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryApplicationFormRequet.ProtoReflect.Descriptor instead.
func (*QueryApplicationFormRequet) Descriptor() ([]byte, []int) {
	return file_pkg_department_pb_request_proto_rawDescGZIP(), []int{6}
}

func (x *QueryApplicationFormRequet) GetPage() *page.PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *QueryApplicationFormRequet) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *QueryApplicationFormRequet) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *QueryApplicationFormRequet) GetStatus() ApplicationFormStatus {
	if x != nil {
		return x.Status
	}
	return ApplicationFormStatus_NULL
}

func (x *QueryApplicationFormRequet) GetSkipItems() bool {
	if x != nil {
		return x.SkipItems
	}
	return false
}

func (x *QueryApplicationFormRequet) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// DescribeApplicationFormRequet todo
type DescribeApplicationFormRequet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain"`
}

func (x *DescribeApplicationFormRequet) Reset() {
	*x = DescribeApplicationFormRequet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_department_pb_request_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeApplicationFormRequet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeApplicationFormRequet) ProtoMessage() {}

func (x *DescribeApplicationFormRequet) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_department_pb_request_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeApplicationFormRequet.ProtoReflect.Descriptor instead.
func (*DescribeApplicationFormRequet) Descriptor() ([]byte, []int) {
	return file_pkg_department_pb_request_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeApplicationFormRequet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DescribeApplicationFormRequet) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// DealApplicationFormRequest todo
type DealApplicationFormRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 状态
	Status ApplicationFormStatus `protobuf:"varint,2,opt,name=status,proto3,enum=keyauth.department.ApplicationFormStatus" json:"status"`
	// 备注
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message"`
}

func (x *DealApplicationFormRequest) Reset() {
	*x = DealApplicationFormRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_department_pb_request_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealApplicationFormRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealApplicationFormRequest) ProtoMessage() {}

func (x *DealApplicationFormRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_department_pb_request_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealApplicationFormRequest.ProtoReflect.Descriptor instead.
func (*DealApplicationFormRequest) Descriptor() ([]byte, []int) {
	return file_pkg_department_pb_request_proto_rawDescGZIP(), []int{8}
}

func (x *DealApplicationFormRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DealApplicationFormRequest) GetStatus() ApplicationFormStatus {
	if x != nil {
		return x.Status
	}
	return ApplicationFormStatus_NULL
}

func (x *DealApplicationFormRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pkg_department_pb_request_proto protoreflect.FileDescriptor

var file_pkg_department_pb_request_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x6b, 0x65, 0x79, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6d, 0x63, 0x75,
	0x62, 0x65, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x67, 0x6f, 0x2d, 0x65, 0x78, 0x74, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x2f, 0x74, 0x61, 0x67, 0x2f, 0x74, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62,
	0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x70, 0x62, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x03, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x2c, 0xc2, 0xde, 0x1f, 0x28, 0x0a, 0x26, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x6c, 0x74, 0x65, 0x3d, 0x36, 0x30, 0x22,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xc2, 0xde,
	0x1f, 0x15, 0x0a, 0x13, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0xc2, 0xde, 0x1f, 0x25, 0x0a, 0x23, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x20,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x6c, 0x74, 0x65, 0x3d, 0x32, 0x30,
	0x30, 0x22, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x07,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc2,
	0xde, 0x1f, 0x2c, 0x0a, 0x2a, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x22, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x6c, 0x74, 0x65, 0x3d, 0x32, 0x30, 0x30, 0x22, 0x52,
	0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x2f, 0xc2, 0xde, 0x1f, 0x2b, 0x0a, 0x29, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x20,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x6c, 0x74, 0x65, 0x3d, 0x32, 0x30,
	0x30, 0x22, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x13, 0xc2, 0xde, 0x1f, 0x0f, 0x0a, 0x0d, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x33,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x16, 0xc2, 0xde, 0x1f, 0x12, 0x0a, 0x10, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x22, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x22, 0xf1, 0x03, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x11, 0xc2, 0xde, 0x1f, 0x0d, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xc2, 0xde, 0x1f,
	0x12, 0x0a, 0x10, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x22, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x15, 0xc2, 0xde, 0x1f, 0x11, 0x0a, 0x0f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x36, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x17, 0xc2, 0xde, 0x1f, 0x13, 0x0a, 0x11, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x52, 0x09, 0x73,
	0x6b, 0x69, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x1b, 0xc2, 0xde, 0x1f, 0x17, 0x0a, 0x15, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0c, 0x77,
	0x69, 0x74, 0x68, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x1c, 0xc2, 0xde, 0x1f, 0x18, 0x0a, 0x16, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x33, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x16, 0xc2, 0xde, 0x1f, 0x12, 0x0a, 0x10, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x52, 0x08, 0x77, 0x69,
	0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xc2, 0xde, 0x1f, 0x23, 0x0a, 0x21, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x20, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xe1, 0x02, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xc2, 0xde, 0x1f, 0x0b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64,
	0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x11, 0xc2, 0xde, 0x1f, 0x0d, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0e,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x1b, 0xc2, 0xde, 0x1f, 0x17, 0x0a, 0x15, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x44, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x1c, 0xc2, 0xde, 0x1f, 0x18, 0x0a, 0x16,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x16, 0xc2, 0xde, 0x1f, 0x12, 0x0a, 0x10,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xc2, 0xde, 0x1f, 0x23,
	0x0a, 0x21, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x20,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x22, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xeb, 0x01, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6b,
	0x65, 0x79, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x18,
	0xc2, 0xde, 0x1f, 0x14, 0x0a, 0x12, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xc2, 0xde, 0x1f, 0x0b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64,
	0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x52, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x65, 0x79, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x11, 0xc2, 0xde, 0x1f, 0x0d, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xc2, 0xde, 0x1f, 0x0b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64,
	0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8d, 0x02, 0x0a, 0x15, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x42, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x28, 0xc2, 0xde, 0x1f, 0x24, 0x0a, 0x22, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a,
	0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc2, 0xde, 0x1f, 0x2a,
	0x0a, 0x28, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a,
	0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xc2, 0xde, 0x1f, 0x10, 0x0a,
	0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xc2, 0xde, 0x1f, 0x0f, 0x0a, 0x0d,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x98, 0x03, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x11, 0xc2, 0xde, 0x1f, 0x0d, 0x0a, 0x0b, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x70, 0x61, 0x67, 0x65, 0x22, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x2e,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xc2, 0xde, 0x1f, 0x10, 0x0a, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f,
	0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xc2, 0xde, 0x1f, 0x16, 0x0a, 0x14, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x22, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x56, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x29, 0x2e, 0x6b, 0x65, 0x79, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x13, 0xc2, 0xde, 0x1f, 0x0f,
	0x0a, 0x0d, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x17, 0xc2, 0xde, 0x1f,
	0x13, 0x0a, 0x11, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x3f, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x27, 0xc2, 0xde, 0x1f, 0x23, 0x0a, 0x21, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x22, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x22, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x22, 0x6d, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xc2,
	0xde, 0x1f, 0x0b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xc2, 0xde, 0x1f, 0x0f, 0x0a, 0x0d, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22,
	0xc5, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xc2, 0xde, 0x1f, 0x0b,
	0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x56, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x29, 0x2e, 0x6b, 0x65, 0x79, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x13, 0xc2, 0xde, 0x1f, 0x0f,
	0x0a, 0x0d, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xc2, 0xde, 0x1f, 0x10, 0x0a, 0x0e,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2f, 0x6b, 0x65, 0x79, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_department_pb_request_proto_rawDescOnce sync.Once
	file_pkg_department_pb_request_proto_rawDescData = file_pkg_department_pb_request_proto_rawDesc
)

func file_pkg_department_pb_request_proto_rawDescGZIP() []byte {
	file_pkg_department_pb_request_proto_rawDescOnce.Do(func() {
		file_pkg_department_pb_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_department_pb_request_proto_rawDescData)
	})
	return file_pkg_department_pb_request_proto_rawDescData
}

var file_pkg_department_pb_request_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_department_pb_request_proto_goTypes = []interface{}{
	(*CreateDepartmentRequest)(nil),       // 0: keyauth.department.CreateDepartmentRequest
	(*QueryDepartmentRequest)(nil),        // 1: keyauth.department.QueryDepartmentRequest
	(*DescribeDeparmentRequest)(nil),      // 2: keyauth.department.DescribeDeparmentRequest
	(*UpdateDepartmentRequest)(nil),       // 3: keyauth.department.UpdateDepartmentRequest
	(*DeleteDepartmentRequest)(nil),       // 4: keyauth.department.DeleteDepartmentRequest
	(*JoinDepartmentRequest)(nil),         // 5: keyauth.department.JoinDepartmentRequest
	(*QueryApplicationFormRequet)(nil),    // 6: keyauth.department.QueryApplicationFormRequet
	(*DescribeApplicationFormRequet)(nil), // 7: keyauth.department.DescribeApplicationFormRequet
	(*DealApplicationFormRequest)(nil),    // 8: keyauth.department.DealApplicationFormRequest
	(*page.PageRequest)(nil),              // 9: page.PageRequest
	(types.UpdateMode)(0),                 // 10: keyauth.common.types.UpdateMode
	(ApplicationFormStatus)(0),            // 11: keyauth.department.ApplicationFormStatus
}
var file_pkg_department_pb_request_proto_depIdxs = []int32{
	9,  // 0: keyauth.department.QueryDepartmentRequest.page:type_name -> page.PageRequest
	10, // 1: keyauth.department.UpdateDepartmentRequest.update_mode:type_name -> keyauth.common.types.UpdateMode
	0,  // 2: keyauth.department.UpdateDepartmentRequest.data:type_name -> keyauth.department.CreateDepartmentRequest
	9,  // 3: keyauth.department.QueryApplicationFormRequet.page:type_name -> page.PageRequest
	11, // 4: keyauth.department.QueryApplicationFormRequet.status:type_name -> keyauth.department.ApplicationFormStatus
	11, // 5: keyauth.department.DealApplicationFormRequest.status:type_name -> keyauth.department.ApplicationFormStatus
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_department_pb_request_proto_init() }
func file_pkg_department_pb_request_proto_init() {
	if File_pkg_department_pb_request_proto != nil {
		return
	}
	file_pkg_department_pb_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pkg_department_pb_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_department_pb_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDepartmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_department_pb_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDeparmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_department_pb_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepartmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_department_pb_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDepartmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_department_pb_request_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinDepartmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_department_pb_request_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryApplicationFormRequet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_department_pb_request_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeApplicationFormRequet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_department_pb_request_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealApplicationFormRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_department_pb_request_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_department_pb_request_proto_goTypes,
		DependencyIndexes: file_pkg_department_pb_request_proto_depIdxs,
		MessageInfos:      file_pkg_department_pb_request_proto_msgTypes,
	}.Build()
	File_pkg_department_pb_request_proto = out.File
	file_pkg_department_pb_request_proto_rawDesc = nil
	file_pkg_department_pb_request_proto_goTypes = nil
	file_pkg_department_pb_request_proto_depIdxs = nil
}
